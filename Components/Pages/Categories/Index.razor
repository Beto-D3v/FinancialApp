@page "/categories"
@inject ApplicationDbContext Context
@rendermode InteractiveServer


<h1>Categories</h1>

<a class="btn btn-primary" href="/categories/create">Criar categoria</a>


@if (!Categories.Any())
{
    <p class="text-center">
        <em>Carregando as categorias...</em>
    </p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Título</th>
                <th>Detalhes</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var category in Categories)
            {
                <tr @key="Model">
                    <td>@category.Id</td>
                    <td>@category.Title</td>
                    <td><a class="btn btn-primary" href="/categories/details/@category.Id">Detalhes</a></td>
                    <td><a class="btn btn-primary" href="/categories/edit/@category.Id">Editar</a></td>
                    <td>
                        <button class="btn btn-danger" @onclick="@(async() => await DeleteCategory(category.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>

    </table>
}



@code {
    public IEnumerable<Category> Categories { get; set; } = Enumerable.Empty<Category>();
    public Category? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Categories = await Context.Categories.AsNoTracking().ToListAsync();
    }

    public async Task DeleteCategory(int id)
    {
        Model =  await Context.Categories.FirstOrDefaultAsync(c => c.Id == id);

        if (Model == null)
        {
            throw new Exception("Categoria não encontrada!");
        }
        else
        {
            Context.Categories.Remove(Model);
            await Context.SaveChangesAsync();
            await OnInitializedAsync();
        }

    }

    public async Task EditCategory(int id)
    {
        
    }


}
